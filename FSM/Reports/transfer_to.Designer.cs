//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8937
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace FSM.Reports {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("transfer_to")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class transfer_to : global::System.Data.DataSet {
        
        private transfer_tabDataTable tabletransfer_tab;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public transfer_to() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected transfer_to(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["transfer_tab"] != null)) {
                    base.Tables.Add(new transfer_tabDataTable(ds.Tables["transfer_tab"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public transfer_tabDataTable transfer_tab {
            get {
                return this.tabletransfer_tab;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            transfer_to cln = ((transfer_to)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["transfer_tab"] != null)) {
                    base.Tables.Add(new transfer_tabDataTable(ds.Tables["transfer_tab"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabletransfer_tab = ((transfer_tabDataTable)(base.Tables["transfer_tab"]));
            if ((initTable == true)) {
                if ((this.tabletransfer_tab != null)) {
                    this.tabletransfer_tab.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "transfer_to";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/transfer_to.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabletransfer_tab = new transfer_tabDataTable();
            base.Tables.Add(this.tabletransfer_tab);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetransfer_tab() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            transfer_to ds = new transfer_to();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void transfer_tabRowChangeEventHandler(object sender, transfer_tabRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class transfer_tabDataTable : global::System.Data.TypedTableBase<transfer_tabRow> {
            
            private global::System.Data.DataColumn columntr_date;
            
            private global::System.Data.DataColumn columntr_time;
            
            private global::System.Data.DataColumn columndn_date;
            
            private global::System.Data.DataColumn columndn_time;
            
            private global::System.Data.DataColumn columnfrom_b;
            
            private global::System.Data.DataColumn columnto_b;
            
            private global::System.Data.DataColumn columnitem;
            
            private global::System.Data.DataColumn columndemand;
            
            private global::System.Data.DataColumn columntransfer;
            
            private global::System.Data.DataColumn columndiscribtion;
            
            private global::System.Data.DataColumn columndemandid;
            
            private global::System.Data.DataColumn columndiscribtion2;
            
            private global::System.Data.DataColumn columnre;
            
            private global::System.Data.DataColumn columnre_date;
            
            private global::System.Data.DataColumn columnre_time;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columndalayed_d;
            
            private global::System.Data.DataColumn columndalayed_t;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public transfer_tabDataTable() {
                this.TableName = "transfer_tab";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal transfer_tabDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected transfer_tabDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tr_dateColumn {
                get {
                    return this.columntr_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tr_timeColumn {
                get {
                    return this.columntr_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dn_dateColumn {
                get {
                    return this.columndn_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dn_timeColumn {
                get {
                    return this.columndn_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn from_bColumn {
                get {
                    return this.columnfrom_b;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn to_bColumn {
                get {
                    return this.columnto_b;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn itemColumn {
                get {
                    return this.columnitem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn demandColumn {
                get {
                    return this.columndemand;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn transferColumn {
                get {
                    return this.columntransfer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn discribtionColumn {
                get {
                    return this.columndiscribtion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn demandidColumn {
                get {
                    return this.columndemandid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn discribtion2Column {
                get {
                    return this.columndiscribtion2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn reColumn {
                get {
                    return this.columnre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn re_dateColumn {
                get {
                    return this.columnre_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn re_timeColumn {
                get {
                    return this.columnre_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dalayed_dColumn {
                get {
                    return this.columndalayed_d;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dalayed_tColumn {
                get {
                    return this.columndalayed_t;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public transfer_tabRow this[int index] {
                get {
                    return ((transfer_tabRow)(this.Rows[index]));
                }
            }
            
            public event transfer_tabRowChangeEventHandler transfer_tabRowChanging;
            
            public event transfer_tabRowChangeEventHandler transfer_tabRowChanged;
            
            public event transfer_tabRowChangeEventHandler transfer_tabRowDeleting;
            
            public event transfer_tabRowChangeEventHandler transfer_tabRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addtransfer_tabRow(transfer_tabRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public transfer_tabRow Addtransfer_tabRow(
                        string tr_date, 
                        string tr_time, 
                        string dn_date, 
                        string dn_time, 
                        string from_b, 
                        string to_b, 
                        string item, 
                        string demand, 
                        string transfer, 
                        string discribtion, 
                        string demandid, 
                        string discribtion2, 
                        string re, 
                        string re_date, 
                        string re_time, 
                        string status, 
                        string dalayed_d, 
                        string dalayed_t) {
                transfer_tabRow rowtransfer_tabRow = ((transfer_tabRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        tr_date,
                        tr_time,
                        dn_date,
                        dn_time,
                        from_b,
                        to_b,
                        item,
                        demand,
                        transfer,
                        discribtion,
                        demandid,
                        discribtion2,
                        re,
                        re_date,
                        re_time,
                        status,
                        dalayed_d,
                        dalayed_t};
                rowtransfer_tabRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtransfer_tabRow);
                return rowtransfer_tabRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                transfer_tabDataTable cln = ((transfer_tabDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new transfer_tabDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columntr_date = base.Columns["tr_date"];
                this.columntr_time = base.Columns["tr_time"];
                this.columndn_date = base.Columns["dn_date"];
                this.columndn_time = base.Columns["dn_time"];
                this.columnfrom_b = base.Columns["from_b"];
                this.columnto_b = base.Columns["to_b"];
                this.columnitem = base.Columns["item"];
                this.columndemand = base.Columns["demand"];
                this.columntransfer = base.Columns["transfer"];
                this.columndiscribtion = base.Columns["discribtion"];
                this.columndemandid = base.Columns["demandid"];
                this.columndiscribtion2 = base.Columns["discribtion2"];
                this.columnre = base.Columns["re"];
                this.columnre_date = base.Columns["re_date"];
                this.columnre_time = base.Columns["re_time"];
                this.columnstatus = base.Columns["status"];
                this.columndalayed_d = base.Columns["dalayed_d"];
                this.columndalayed_t = base.Columns["dalayed_t"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columntr_date = new global::System.Data.DataColumn("tr_date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntr_date);
                this.columntr_time = new global::System.Data.DataColumn("tr_time", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntr_time);
                this.columndn_date = new global::System.Data.DataColumn("dn_date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndn_date);
                this.columndn_time = new global::System.Data.DataColumn("dn_time", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndn_time);
                this.columnfrom_b = new global::System.Data.DataColumn("from_b", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfrom_b);
                this.columnto_b = new global::System.Data.DataColumn("to_b", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnto_b);
                this.columnitem = new global::System.Data.DataColumn("item", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnitem);
                this.columndemand = new global::System.Data.DataColumn("demand", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndemand);
                this.columntransfer = new global::System.Data.DataColumn("transfer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntransfer);
                this.columndiscribtion = new global::System.Data.DataColumn("discribtion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndiscribtion);
                this.columndemandid = new global::System.Data.DataColumn("demandid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndemandid);
                this.columndiscribtion2 = new global::System.Data.DataColumn("discribtion2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndiscribtion2);
                this.columnre = new global::System.Data.DataColumn("re", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnre);
                this.columnre_date = new global::System.Data.DataColumn("re_date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnre_date);
                this.columnre_time = new global::System.Data.DataColumn("re_time", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnre_time);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columndalayed_d = new global::System.Data.DataColumn("dalayed_d", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndalayed_d);
                this.columndalayed_t = new global::System.Data.DataColumn("dalayed_t", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndalayed_t);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public transfer_tabRow Newtransfer_tabRow() {
                return ((transfer_tabRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new transfer_tabRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(transfer_tabRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.transfer_tabRowChanged != null)) {
                    this.transfer_tabRowChanged(this, new transfer_tabRowChangeEvent(((transfer_tabRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.transfer_tabRowChanging != null)) {
                    this.transfer_tabRowChanging(this, new transfer_tabRowChangeEvent(((transfer_tabRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.transfer_tabRowDeleted != null)) {
                    this.transfer_tabRowDeleted(this, new transfer_tabRowChangeEvent(((transfer_tabRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.transfer_tabRowDeleting != null)) {
                    this.transfer_tabRowDeleting(this, new transfer_tabRowChangeEvent(((transfer_tabRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removetransfer_tabRow(transfer_tabRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                transfer_to ds = new transfer_to();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "transfer_tabDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class transfer_tabRow : global::System.Data.DataRow {
            
            private transfer_tabDataTable tabletransfer_tab;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal transfer_tabRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletransfer_tab = ((transfer_tabDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tr_date {
                get {
                    try {
                        return ((string)(this[this.tabletransfer_tab.tr_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tr_date\' in table \'transfer_tab\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletransfer_tab.tr_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tr_time {
                get {
                    try {
                        return ((string)(this[this.tabletransfer_tab.tr_timeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tr_time\' in table \'transfer_tab\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletransfer_tab.tr_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string dn_date {
                get {
                    try {
                        return ((string)(this[this.tabletransfer_tab.dn_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dn_date\' in table \'transfer_tab\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletransfer_tab.dn_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string dn_time {
                get {
                    try {
                        return ((string)(this[this.tabletransfer_tab.dn_timeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dn_time\' in table \'transfer_tab\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletransfer_tab.dn_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string from_b {
                get {
                    try {
                        return ((string)(this[this.tabletransfer_tab.from_bColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'from_b\' in table \'transfer_tab\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletransfer_tab.from_bColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string to_b {
                get {
                    try {
                        return ((string)(this[this.tabletransfer_tab.to_bColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'to_b\' in table \'transfer_tab\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletransfer_tab.to_bColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string item {
                get {
                    try {
                        return ((string)(this[this.tabletransfer_tab.itemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'item\' in table \'transfer_tab\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletransfer_tab.itemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string demand {
                get {
                    try {
                        return ((string)(this[this.tabletransfer_tab.demandColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'demand\' in table \'transfer_tab\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletransfer_tab.demandColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string transfer {
                get {
                    try {
                        return ((string)(this[this.tabletransfer_tab.transferColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'transfer\' in table \'transfer_tab\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletransfer_tab.transferColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string discribtion {
                get {
                    try {
                        return ((string)(this[this.tabletransfer_tab.discribtionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'discribtion\' in table \'transfer_tab\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletransfer_tab.discribtionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string demandid {
                get {
                    try {
                        return ((string)(this[this.tabletransfer_tab.demandidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'demandid\' in table \'transfer_tab\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletransfer_tab.demandidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string discribtion2 {
                get {
                    try {
                        return ((string)(this[this.tabletransfer_tab.discribtion2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'discribtion2\' in table \'transfer_tab\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletransfer_tab.discribtion2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string re {
                get {
                    try {
                        return ((string)(this[this.tabletransfer_tab.reColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'re\' in table \'transfer_tab\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletransfer_tab.reColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string re_date {
                get {
                    try {
                        return ((string)(this[this.tabletransfer_tab.re_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'re_date\' in table \'transfer_tab\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletransfer_tab.re_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string re_time {
                get {
                    try {
                        return ((string)(this[this.tabletransfer_tab.re_timeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'re_time\' in table \'transfer_tab\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletransfer_tab.re_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string status {
                get {
                    try {
                        return ((string)(this[this.tabletransfer_tab.statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'status\' in table \'transfer_tab\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletransfer_tab.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string dalayed_d {
                get {
                    try {
                        return ((string)(this[this.tabletransfer_tab.dalayed_dColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dalayed_d\' in table \'transfer_tab\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletransfer_tab.dalayed_dColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string dalayed_t {
                get {
                    try {
                        return ((string)(this[this.tabletransfer_tab.dalayed_tColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dalayed_t\' in table \'transfer_tab\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletransfer_tab.dalayed_tColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istr_dateNull() {
                return this.IsNull(this.tabletransfer_tab.tr_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settr_dateNull() {
                this[this.tabletransfer_tab.tr_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istr_timeNull() {
                return this.IsNull(this.tabletransfer_tab.tr_timeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settr_timeNull() {
                this[this.tabletransfer_tab.tr_timeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdn_dateNull() {
                return this.IsNull(this.tabletransfer_tab.dn_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdn_dateNull() {
                this[this.tabletransfer_tab.dn_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdn_timeNull() {
                return this.IsNull(this.tabletransfer_tab.dn_timeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdn_timeNull() {
                this[this.tabletransfer_tab.dn_timeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfrom_bNull() {
                return this.IsNull(this.tabletransfer_tab.from_bColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfrom_bNull() {
                this[this.tabletransfer_tab.from_bColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isto_bNull() {
                return this.IsNull(this.tabletransfer_tab.to_bColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setto_bNull() {
                this[this.tabletransfer_tab.to_bColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsitemNull() {
                return this.IsNull(this.tabletransfer_tab.itemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetitemNull() {
                this[this.tabletransfer_tab.itemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdemandNull() {
                return this.IsNull(this.tabletransfer_tab.demandColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdemandNull() {
                this[this.tabletransfer_tab.demandColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstransferNull() {
                return this.IsNull(this.tabletransfer_tab.transferColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettransferNull() {
                this[this.tabletransfer_tab.transferColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdiscribtionNull() {
                return this.IsNull(this.tabletransfer_tab.discribtionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdiscribtionNull() {
                this[this.tabletransfer_tab.discribtionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdemandidNull() {
                return this.IsNull(this.tabletransfer_tab.demandidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdemandidNull() {
                this[this.tabletransfer_tab.demandidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdiscribtion2Null() {
                return this.IsNull(this.tabletransfer_tab.discribtion2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdiscribtion2Null() {
                this[this.tabletransfer_tab.discribtion2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsreNull() {
                return this.IsNull(this.tabletransfer_tab.reColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetreNull() {
                this[this.tabletransfer_tab.reColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isre_dateNull() {
                return this.IsNull(this.tabletransfer_tab.re_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setre_dateNull() {
                this[this.tabletransfer_tab.re_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isre_timeNull() {
                return this.IsNull(this.tabletransfer_tab.re_timeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setre_timeNull() {
                this[this.tabletransfer_tab.re_timeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatusNull() {
                return this.IsNull(this.tabletransfer_tab.statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatusNull() {
                this[this.tabletransfer_tab.statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdalayed_dNull() {
                return this.IsNull(this.tabletransfer_tab.dalayed_dColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdalayed_dNull() {
                this[this.tabletransfer_tab.dalayed_dColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdalayed_tNull() {
                return this.IsNull(this.tabletransfer_tab.dalayed_tColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdalayed_tNull() {
                this[this.tabletransfer_tab.dalayed_tColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class transfer_tabRowChangeEvent : global::System.EventArgs {
            
            private transfer_tabRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public transfer_tabRowChangeEvent(transfer_tabRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public transfer_tabRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591