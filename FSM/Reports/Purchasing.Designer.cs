//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8937
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace FSM.Reports {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("Purchasing")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class Purchasing : global::System.Data.DataSet {
        
        private Purchasing_tableDataTable tablePurchasing_table;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Purchasing() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected Purchasing(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Purchasing_table"] != null)) {
                    base.Tables.Add(new Purchasing_tableDataTable(ds.Tables["Purchasing_table"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Purchasing_tableDataTable Purchasing_table {
            get {
                return this.tablePurchasing_table;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            Purchasing cln = ((Purchasing)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Purchasing_table"] != null)) {
                    base.Tables.Add(new Purchasing_tableDataTable(ds.Tables["Purchasing_table"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablePurchasing_table = ((Purchasing_tableDataTable)(base.Tables["Purchasing_table"]));
            if ((initTable == true)) {
                if ((this.tablePurchasing_table != null)) {
                    this.tablePurchasing_table.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "Purchasing";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/Purchasing.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablePurchasing_table = new Purchasing_tableDataTable();
            base.Tables.Add(this.tablePurchasing_table);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePurchasing_table() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            Purchasing ds = new Purchasing();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void Purchasing_tableRowChangeEventHandler(object sender, Purchasing_tableRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Purchasing_tableDataTable : global::System.Data.TypedTableBase<Purchasing_tableRow> {
            
            private global::System.Data.DataColumn columnsupplier;
            
            private global::System.Data.DataColumn columnitem;
            
            private global::System.Data.DataColumn columnweight;
            
            private global::System.Data.DataColumn columnbag;
            
            private global::System.Data.DataColumn columntotal;
            
            private global::System.Data.DataColumn columndate;
            
            private global::System.Data.DataColumn columntime;
            
            private global::System.Data.DataColumn columncost;
            
            private global::System.Data.DataColumn columntotal_cost;
            
            private global::System.Data.DataColumn columnto_date;
            
            private global::System.Data.DataColumn columnfrom_date;
            
            private global::System.Data.DataColumn columnbranch;
            
            private global::System.Data.DataColumn columntax;
            
            private global::System.Data.DataColumn columndiscount;
            
            private global::System.Data.DataColumn columninvoice_number;
            
            private global::System.Data.DataColumn columnbag_cost;
            
            private global::System.Data.DataColumn columntax_a;
            
            private global::System.Data.DataColumn columnbarcode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Purchasing_tableDataTable() {
                this.TableName = "Purchasing_table";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Purchasing_tableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Purchasing_tableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn supplierColumn {
                get {
                    return this.columnsupplier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn itemColumn {
                get {
                    return this.columnitem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn weightColumn {
                get {
                    return this.columnweight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bagColumn {
                get {
                    return this.columnbag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn totalColumn {
                get {
                    return this.columntotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dateColumn {
                get {
                    return this.columndate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn timeColumn {
                get {
                    return this.columntime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn costColumn {
                get {
                    return this.columncost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn total_costColumn {
                get {
                    return this.columntotal_cost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn to_dateColumn {
                get {
                    return this.columnto_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn from_dateColumn {
                get {
                    return this.columnfrom_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn branchColumn {
                get {
                    return this.columnbranch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn taxColumn {
                get {
                    return this.columntax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn discountColumn {
                get {
                    return this.columndiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn invoice_numberColumn {
                get {
                    return this.columninvoice_number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bag_costColumn {
                get {
                    return this.columnbag_cost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tax_aColumn {
                get {
                    return this.columntax_a;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn barcodeColumn {
                get {
                    return this.columnbarcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Purchasing_tableRow this[int index] {
                get {
                    return ((Purchasing_tableRow)(this.Rows[index]));
                }
            }
            
            public event Purchasing_tableRowChangeEventHandler Purchasing_tableRowChanging;
            
            public event Purchasing_tableRowChangeEventHandler Purchasing_tableRowChanged;
            
            public event Purchasing_tableRowChangeEventHandler Purchasing_tableRowDeleting;
            
            public event Purchasing_tableRowChangeEventHandler Purchasing_tableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPurchasing_tableRow(Purchasing_tableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Purchasing_tableRow AddPurchasing_tableRow(
                        string supplier, 
                        string item, 
                        string weight, 
                        string bag, 
                        string total, 
                        System.DateTime date, 
                        string time, 
                        string cost, 
                        string total_cost, 
                        string to_date, 
                        string from_date, 
                        string branch, 
                        string tax, 
                        string discount, 
                        string invoice_number, 
                        string bag_cost, 
                        string tax_a, 
                        string barcode) {
                Purchasing_tableRow rowPurchasing_tableRow = ((Purchasing_tableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        supplier,
                        item,
                        weight,
                        bag,
                        total,
                        date,
                        time,
                        cost,
                        total_cost,
                        to_date,
                        from_date,
                        branch,
                        tax,
                        discount,
                        invoice_number,
                        bag_cost,
                        tax_a,
                        barcode};
                rowPurchasing_tableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPurchasing_tableRow);
                return rowPurchasing_tableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Purchasing_tableDataTable cln = ((Purchasing_tableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Purchasing_tableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnsupplier = base.Columns["supplier"];
                this.columnitem = base.Columns["item"];
                this.columnweight = base.Columns["weight"];
                this.columnbag = base.Columns["bag"];
                this.columntotal = base.Columns["total"];
                this.columndate = base.Columns["date"];
                this.columntime = base.Columns["time"];
                this.columncost = base.Columns["cost"];
                this.columntotal_cost = base.Columns["total_cost"];
                this.columnto_date = base.Columns["to_date"];
                this.columnfrom_date = base.Columns["from_date"];
                this.columnbranch = base.Columns["branch"];
                this.columntax = base.Columns["tax"];
                this.columndiscount = base.Columns["discount"];
                this.columninvoice_number = base.Columns["invoice_number"];
                this.columnbag_cost = base.Columns["bag_cost"];
                this.columntax_a = base.Columns["tax_a"];
                this.columnbarcode = base.Columns["barcode"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnsupplier = new global::System.Data.DataColumn("supplier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsupplier);
                this.columnitem = new global::System.Data.DataColumn("item", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnitem);
                this.columnweight = new global::System.Data.DataColumn("weight", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnweight);
                this.columnbag = new global::System.Data.DataColumn("bag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbag);
                this.columntotal = new global::System.Data.DataColumn("total", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotal);
                this.columndate = new global::System.Data.DataColumn("date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndate);
                this.columntime = new global::System.Data.DataColumn("time", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntime);
                this.columncost = new global::System.Data.DataColumn("cost", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncost);
                this.columntotal_cost = new global::System.Data.DataColumn("total_cost", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotal_cost);
                this.columnto_date = new global::System.Data.DataColumn("to_date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnto_date);
                this.columnfrom_date = new global::System.Data.DataColumn("from_date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfrom_date);
                this.columnbranch = new global::System.Data.DataColumn("branch", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbranch);
                this.columntax = new global::System.Data.DataColumn("tax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntax);
                this.columndiscount = new global::System.Data.DataColumn("discount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndiscount);
                this.columninvoice_number = new global::System.Data.DataColumn("invoice_number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninvoice_number);
                this.columnbag_cost = new global::System.Data.DataColumn("bag_cost", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbag_cost);
                this.columntax_a = new global::System.Data.DataColumn("tax_a", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntax_a);
                this.columnbarcode = new global::System.Data.DataColumn("barcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbarcode);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Purchasing_tableRow NewPurchasing_tableRow() {
                return ((Purchasing_tableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Purchasing_tableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Purchasing_tableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Purchasing_tableRowChanged != null)) {
                    this.Purchasing_tableRowChanged(this, new Purchasing_tableRowChangeEvent(((Purchasing_tableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Purchasing_tableRowChanging != null)) {
                    this.Purchasing_tableRowChanging(this, new Purchasing_tableRowChangeEvent(((Purchasing_tableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Purchasing_tableRowDeleted != null)) {
                    this.Purchasing_tableRowDeleted(this, new Purchasing_tableRowChangeEvent(((Purchasing_tableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Purchasing_tableRowDeleting != null)) {
                    this.Purchasing_tableRowDeleting(this, new Purchasing_tableRowChangeEvent(((Purchasing_tableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePurchasing_tableRow(Purchasing_tableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Purchasing ds = new Purchasing();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Purchasing_tableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Purchasing_tableRow : global::System.Data.DataRow {
            
            private Purchasing_tableDataTable tablePurchasing_table;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Purchasing_tableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePurchasing_table = ((Purchasing_tableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string supplier {
                get {
                    try {
                        return ((string)(this[this.tablePurchasing_table.supplierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'supplier\' in table \'Purchasing_table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchasing_table.supplierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string item {
                get {
                    try {
                        return ((string)(this[this.tablePurchasing_table.itemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'item\' in table \'Purchasing_table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchasing_table.itemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string weight {
                get {
                    try {
                        return ((string)(this[this.tablePurchasing_table.weightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'weight\' in table \'Purchasing_table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchasing_table.weightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bag {
                get {
                    try {
                        return ((string)(this[this.tablePurchasing_table.bagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bag\' in table \'Purchasing_table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchasing_table.bagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string total {
                get {
                    try {
                        return ((string)(this[this.tablePurchasing_table.totalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'total\' in table \'Purchasing_table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchasing_table.totalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePurchasing_table.dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'date\' in table \'Purchasing_table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchasing_table.dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string time {
                get {
                    try {
                        return ((string)(this[this.tablePurchasing_table.timeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'time\' in table \'Purchasing_table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchasing_table.timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cost {
                get {
                    try {
                        return ((string)(this[this.tablePurchasing_table.costColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cost\' in table \'Purchasing_table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchasing_table.costColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string total_cost {
                get {
                    try {
                        return ((string)(this[this.tablePurchasing_table.total_costColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'total_cost\' in table \'Purchasing_table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchasing_table.total_costColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string to_date {
                get {
                    try {
                        return ((string)(this[this.tablePurchasing_table.to_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'to_date\' in table \'Purchasing_table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchasing_table.to_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string from_date {
                get {
                    try {
                        return ((string)(this[this.tablePurchasing_table.from_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'from_date\' in table \'Purchasing_table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchasing_table.from_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string branch {
                get {
                    try {
                        return ((string)(this[this.tablePurchasing_table.branchColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'branch\' in table \'Purchasing_table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchasing_table.branchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tax {
                get {
                    try {
                        return ((string)(this[this.tablePurchasing_table.taxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tax\' in table \'Purchasing_table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchasing_table.taxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string discount {
                get {
                    try {
                        return ((string)(this[this.tablePurchasing_table.discountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'discount\' in table \'Purchasing_table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchasing_table.discountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string invoice_number {
                get {
                    try {
                        return ((string)(this[this.tablePurchasing_table.invoice_numberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'invoice_number\' in table \'Purchasing_table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchasing_table.invoice_numberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bag_cost {
                get {
                    try {
                        return ((string)(this[this.tablePurchasing_table.bag_costColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bag_cost\' in table \'Purchasing_table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchasing_table.bag_costColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tax_a {
                get {
                    try {
                        return ((string)(this[this.tablePurchasing_table.tax_aColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tax_a\' in table \'Purchasing_table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchasing_table.tax_aColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string barcode {
                get {
                    try {
                        return ((string)(this[this.tablePurchasing_table.barcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'barcode\' in table \'Purchasing_table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchasing_table.barcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssupplierNull() {
                return this.IsNull(this.tablePurchasing_table.supplierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsupplierNull() {
                this[this.tablePurchasing_table.supplierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsitemNull() {
                return this.IsNull(this.tablePurchasing_table.itemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetitemNull() {
                this[this.tablePurchasing_table.itemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsweightNull() {
                return this.IsNull(this.tablePurchasing_table.weightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetweightNull() {
                this[this.tablePurchasing_table.weightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbagNull() {
                return this.IsNull(this.tablePurchasing_table.bagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbagNull() {
                this[this.tablePurchasing_table.bagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstotalNull() {
                return this.IsNull(this.tablePurchasing_table.totalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettotalNull() {
                this[this.tablePurchasing_table.totalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdateNull() {
                return this.IsNull(this.tablePurchasing_table.dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdateNull() {
                this[this.tablePurchasing_table.dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstimeNull() {
                return this.IsNull(this.tablePurchasing_table.timeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettimeNull() {
                this[this.tablePurchasing_table.timeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscostNull() {
                return this.IsNull(this.tablePurchasing_table.costColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcostNull() {
                this[this.tablePurchasing_table.costColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istotal_costNull() {
                return this.IsNull(this.tablePurchasing_table.total_costColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settotal_costNull() {
                this[this.tablePurchasing_table.total_costColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isto_dateNull() {
                return this.IsNull(this.tablePurchasing_table.to_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setto_dateNull() {
                this[this.tablePurchasing_table.to_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfrom_dateNull() {
                return this.IsNull(this.tablePurchasing_table.from_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfrom_dateNull() {
                this[this.tablePurchasing_table.from_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbranchNull() {
                return this.IsNull(this.tablePurchasing_table.branchColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbranchNull() {
                this[this.tablePurchasing_table.branchColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstaxNull() {
                return this.IsNull(this.tablePurchasing_table.taxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettaxNull() {
                this[this.tablePurchasing_table.taxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdiscountNull() {
                return this.IsNull(this.tablePurchasing_table.discountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdiscountNull() {
                this[this.tablePurchasing_table.discountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isinvoice_numberNull() {
                return this.IsNull(this.tablePurchasing_table.invoice_numberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setinvoice_numberNull() {
                this[this.tablePurchasing_table.invoice_numberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isbag_costNull() {
                return this.IsNull(this.tablePurchasing_table.bag_costColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setbag_costNull() {
                this[this.tablePurchasing_table.bag_costColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istax_aNull() {
                return this.IsNull(this.tablePurchasing_table.tax_aColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settax_aNull() {
                this[this.tablePurchasing_table.tax_aColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbarcodeNull() {
                return this.IsNull(this.tablePurchasing_table.barcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbarcodeNull() {
                this[this.tablePurchasing_table.barcodeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Purchasing_tableRowChangeEvent : global::System.EventArgs {
            
            private Purchasing_tableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Purchasing_tableRowChangeEvent(Purchasing_tableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Purchasing_tableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591